import streamlit as st
import os
import cv2
import numpy as np

from config.settings import CONFIG
from ocr.pipeline import OCR_Pipeline
from extractor.field_extractor import FieldExtractor
from preprocessing.aligner import CardAligner
from preprocessing.image_cleaner import ImageCleaner

# ===============================
# Load c√°c model ch·ªâ 1 l·∫ßn
# ===============================
@st.cache_resource
def load_model():
    return OCR_Pipeline(), CardAligner(model_path='model/model_crop.pt', img_size=640)

ocr_model, aligner = load_model()

# ===============================
# H√†m ch·∫°y pipeline OCR
# ===============================
def run_pipeline(image: np.ndarray):
    # cleaner = ImageCleaner()

    cropped = aligner.align(image)

    # D√πng model ƒë√£ cache
    ocr_lines = ocr_model.predict(image)
    return ocr_lines, cropped


# ===============================
# App Streamlit
# ===============================
def main():
    st.set_page_config(page_title="CCCD OCR", layout="wide")
    st.title("üìë H·ªá th·ªëng OCR ƒë·ªçc CƒÉn C∆∞·ªõc C√¥ng D√¢n")

    uploaded_file = st.file_uploader("T·∫£i ·∫£nh CCCD l√™n", type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        file_bytes = np.frombuffer(uploaded_file.read(), np.uint8)
        image = cv2.imdecode(file_bytes, cv2.IMREAD_COLOR)

        # Hi·ªÉn th·ªã ·∫£nh nh·ªè l·∫°i
        st.image(cv2.cvtColor(image, cv2.COLOR_BGR2RGB),
                 caption="·∫¢nh CCCD g·ªëc",
                 width=400)

        with st.spinner("‚è≥ ƒêang x·ª≠ l√Ω OCR..."):
            ocr_lines, cropped = run_pipeline(image)

        st.subheader("K·∫øt qu·∫£ sau khi deskew v√† clean")
        if cropped is None or cropped.size == 0:
            st.error("·∫¢nh b·ªã r·ªóng, kh√¥ng th·ªÉ hi·ªÉn th·ªã! Ki·ªÉm tra l·∫°i b∆∞·ªõc crop ho·∫∑c load ·∫£nh.")
            st.stop()
        else:
            st.image(cv2.cvtColor(cropped, cv2.COLOR_BGR2RGB),
                    caption="·∫¢nh sau khi crop",
                    width=400)
        
        # st.image(cv2.cvtColor(cleaned, cv2.COLOR_BGR2RGB),
        #          caption="clean",
        #          width=400)

        st.subheader("üìú K·∫øt qu·∫£ OCR Raw")
        for line in ocr_lines[::-1]:
            st.write(line)

        extractor = FieldExtractor()
        fields = extractor.extract(ocr_lines[::-1])

        st.subheader("‚úÖ Th√¥ng tin tr√≠ch xu·∫•t")
        st.write("**S·ªë CCCD:** ", fields.get("id_number", ""))
        st.write("**H·ªç v√† t√™n:** ", fields.get("name", ""))
        st.write("**Ng√†y sinh:** ", fields.get("dob", ""))
        st.write("**Gi·ªõi t√≠nh:** ", fields.get("gender", ""))
        st.write("**Qu·ªëc t·ªãch:** ", fields.get("nationality", ""))


if __name__ == "__main__":
    main()
